#include <iostream>

int border[9][9]={
	{0,0,6,0,0,0,1,3,4},
	{0,0,9,4,0,8,0,0,0},
	{5,0,3,0,0,7,9,0,0},
	{2,0,0,3,9,0,4,1,0},
	{3,0,0,2,0,0,5,9,0},
	{9,8,0,0,0,1,0,2,3},
	{0,9,8,0,6,0,0,0,1},
	{0,3,0,1,2,0,0,4,6},
	{0,1,0,0,0,5,3,0,9}
};

void possibleMove(int x,int y,bool number[10]){
	for(int i=0;i<10;i++){
		number[i]=0;
	}

	for(int i=0;i<9;i++){
		number[border[i][y]]=1;
	}
	for(int i=0;i<9;i++){
		number[border[x][i]]=1;
	}
	int start_x=x - x%3;
	int start_y=y - y%3;
	for(int i=0;i<3;i++){
		for(int j=0;j<3;j++){
			number[border[start_x+i][start_y+j]]=1;
		}
	}
}

void printBorder(){
	printf("**********************\n");
	for(int i=0;i<9;i++){
		for(int j=0;j<9;j++){
			printf("%d ",border[i][j]);
		}
		printf("\n");
	}
	printf("**********************\n");
}

bool solve(){
	int x,y;
	bool sw=true;
	for(int i=0;i<9 && sw;i++){
		for(int j=0;j<9 && sw;j++){
			if(border[i][j]==0){
				x=i;
				y=j;
				sw=false;
			}
		}
	}
	if(sw){
		return true;
	}
	bool number[10]={0};
	possibleMove(x,y,number);
	for(int i=1;i<10;i++){
		if(number[i]==0){
			border[x][y]=i;
			if(solve()){
				return true;
			}
			border[x][y]=0;
		}
	}
	return false;
}


int main(int argc, char** argv) {
	printBorder();
	solve();
	printBorder();
    return 0;
}
